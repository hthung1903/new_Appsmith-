export default {
  // H√†m l∆∞u triggeredRow c·ªßa b·∫£ng v√† x√≥a c√°c b·∫£ng c√≤n l·∫°i
  saveTriggeredRowFromTableTL(tableName) {
    if (tableName === "TLBCTS") {
      storeValue("selectedRow_TLBCTS", TableTLBCTS.triggeredRow);
      removeValue("selectedRow_TLBCLL");
      removeValue("selectedRow_TL");
			
    }  else if (tableName === "TLBCLL") {
      storeValue("selectedRow_TLBCLL", TableTLBCLL.triggeredRow);
      removeValue("selectedRow_TLBCTS");
      removeValue("selectedRow_TL");

    }else if (tableName === "TL") {
      storeValue("selectedRow_TL", TableTL.triggeredRow);
			removeValue("selectedRow_TLBCTS");
      removeValue("selectedRow_TLBCLL");
      
    }
  },

  // H√†m l·∫•y triggeredRow ƒë·∫ßu ti√™n c√≥ d·ªØ li·ªáu
  getTriggeredRowTableTL() {
    return (
      appsmith.store.selectedRow_TLBCTS ||
      appsmith.store.selectedRow_TLBCLL ||
      appsmith.store.selectedRow_TL ||
      null
    );
  },
	ShowDDFTL: async () => {
		const path = JSObject2.getTriggeredRowTableTL().duongdan;
		if (!path) {
			showAlert("Kh√¥ng c√≥ ƒë∆∞·ªùng d·∫´n file!", "error");
			return null;
		}
		try {
			const response = await fetch('http://170.18.20.138:5000/view_file', {  // üõ† ƒê·ªïi API
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ path: path })
			});
			const result = await response.json();
			if (response.ok) {
				const fileUrl = `http://170.18.20.138:5000${result.file_url}`; //  L·∫•y file_url t·ª´ k·∫øt qu·∫£
				console.log("File URL:", fileUrl);
				return fileUrl; //  Tr·∫£ v·ªÅ URL file (c√≥ th·ªÉ l√† .pdf ho·∫∑c file g·ªëc)
			} else {
				showAlert("View file th·∫•t b·∫°i: " + result.error, "error");
				console.error(result);
				return null;
			}
		} catch (error) {
			showAlert("L·ªói khi g·ªçi API view_file!", "error");
			console.error(error);
			return null;
		}
	} 

}